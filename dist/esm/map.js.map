{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/map.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAsB5C,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAEtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AA0EvD,MAAM,gBAAiB,SAAQ,WAAW;IACxC;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,KAAK,EAAE,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,KAAa,CAAC,4BAA4B,CAAC,GAAG,OAAO,CAAC;YAE5D,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClD,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YAElC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;AAEhE,MAAM,OAAO,SAAS;IA0BpB,YAAoB,EAAU;QAxBtB,YAAO,GAAuB,IAAI,CAAC;QACnC,mBAAc,GAA0B,IAAI,CAAC;QA2iBrD,sBAAiB,GAAG,GAAS,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAnhBrD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,MAAM,CACxB,OAAsB,EACtB,QAAoD;QAEpD,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,OAAO,CAAC,MAAM,CAAC,eAAe,KAAK,SAAS,EAAE,CAAC;YACjD,OAAO,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QACzC,CAAC;QAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC;QAE/C,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACxE,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAE1D,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,SAAS,EAAE,CAAC;YACzC,MAAM,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED,IAAI,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAChC,OAAO,CAAC,OAAe,GAAG,EAAE,CAAC;YAE9B,MAAM,YAAY,GAAG,GAAG,EAAE;;gBACxB,MAAM,OAAO,GAAG,MAAA,MAAA,MAAM,CAAC,OAAO,0CAAE,qBAAqB,EAAE,mCAAK,EAAc,CAAC;gBAC3E,OAAO;oBACL,CAAC,EAAE,OAAO,CAAC,CAAC;oBACZ,CAAC,EAAE,OAAO,CAAC,CAAC;oBACZ,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,MAAM,EAAE,OAAO,CAAC,MAAM;iBACvB,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,GAAG,EAAE;gBACrB,mBAAmB,CAAC,SAAS,CAAC;oBAC5B,EAAE,EAAE,MAAM,CAAC,EAAE;oBACb,SAAS,EAAE,YAAY,EAAE;iBAC1B,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,MAAM,QAAQ,GAAG,GAAG,EAAE;gBACpB,mBAAmB,CAAC,QAAQ,CAAC;oBAC3B,EAAE,EAAE,MAAM,CAAC,EAAE;oBACb,SAAS,EAAE,YAAY,EAAE;iBAC1B,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,SAAS,CAAC,WAAW,EAAE,KAAK,KAAK,IAAI,SAAS,EAAE,CAAC;gBACnD,SAAS,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;oBAClD,UAAU,CAAC,GAAG,EAAE;wBACd,SAAS,EAAE,CAAC;oBACd,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC;gBACH,SAAS,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,EAAE;oBACjD,UAAU,CAAC,GAAG,EAAE;wBACd,SAAS,EAAE,CAAC;oBACd,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC;YACL,CAAC;YAED,MAAM,SAAS,GAAG;gBAChB,KAAK,EAAE,aAAa,CAAC,KAAK;gBAC1B,MAAM,EAAE,aAAa,CAAC,MAAM;gBAC5B,QAAQ,EAAE,KAAK;aAChB,CAAC;YACF,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE;gBAC9C,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE,CAAC;oBAC3B,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;oBAEvD,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;oBAC7D,IAAI,CAAC,QAAQ,EAAE,CAAC;wBACd,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;4BACvB,IAAI,SAAS,CAAC,WAAW,EAAE,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;gCACpD,SAAS,EAAE,CAAC;4BACd,CAAC;wBACH,CAAC;6BAAM,IAAI,SAAS,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC;4BACpF,QAAQ,EAAE,CAAC;wBACb,CAAC;oBACH,CAAC;oBAED,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;oBAChC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;oBAClC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAChC,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;QAED,6FAA6F;QAC7F,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACpC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,IAAI,CAAC;oBACH,MAAM,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC1C,OAAO,CAAC,SAAS,CAAC,CAAC;gBACrB,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,kBAAkB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAA0B,EAAE,EAAE;gBAC5G,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC;oBAC5B,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACf,kBAAkB,CAAC,MAAM,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAoB;QACxD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,IAAI,aAAa,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;YACpD,IAAI,aAAa,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC;gBAC7B,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,MAAM,cAAc,GAAG,WAAW,CAAC;oBACjC,IAAI,aAAa,CAAC,KAAK,IAAI,CAAC,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;wBAC7C,aAAa,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;wBAChD,OAAO,EAAE,CAAC;oBACZ,CAAC;yBAAM,CAAC;wBACN,IAAI,OAAO,IAAI,EAAE,EAAE,CAAC;4BAClB,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;wBACnD,CAAC;wBACD,aAAa,CAAC,cAAc,CAAC,CAAC;wBAC9B,OAAO,CAAC,aAAa,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC,EAAE,GAAG,CAAC,CAAC;YACV,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,aAAa,CAAC,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,WAAW;QACf,OAAO,mBAAmB,CAAC,WAAW,CAAC;YACrC,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,YAAY;QAChB,OAAO,mBAAmB,CAAC,YAAY,CAAC;YACtC,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,gBAAgB,CAAC,cAAuB;QAC5C,OAAO,mBAAmB,CAAC,gBAAgB,CAAC;YAC1C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,cAAc;SACf,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,iBAAiB;QACrB,OAAO,mBAAmB,CAAC,iBAAiB,CAAC;YAC3C,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,SAAS,CAAC,MAAc;QAC5B,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,SAAS,CAAC;YAC9C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM;SACP,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,EAAE,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,UAAU,CAAC,OAAiB;QAChC,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,UAAU,CAAC;YAC/C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,EAAU,EAAE,MAAc;QAC3C,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,YAAY,CAAC;YACjD,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,MAAM;SACP,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,EAAE,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,GAAW,EAAE,MAAc,EAAE,OAAe;QACjE,OAAO,mBAAmB,CAAC,gBAAgB,CAAC;YAC1C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,GAAG,EAAE,GAAG;YACR,MAAM;YACN,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,OAAO,mBAAmB,CAAC,YAAY,CAAC;YACtC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,aAAa,CAAC,GAAa;QAC/B,OAAO,mBAAmB,CAAC,aAAa,CAAC;YACvC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,SAAS,EAAE,GAAG;SACf,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAmB;QACnC,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC;YAChD,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ;SACT,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,SAAqB;QACtC,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,YAAY,CAAC;YACjD,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,SAAS;SACV,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,GAAa;QAChC,OAAO,mBAAmB,CAAC,cAAc,CAAC;YACxC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,GAAG;SAChB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAiB;QAChC,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,UAAU,CAAC;YAC/C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,GAAa;QAC/B,OAAO,mBAAmB,CAAC,aAAa,CAAC;YACvC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,SAAS,EAAE,GAAG;SACf,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,GAAa;QACjC,OAAO,mBAAmB,CAAC,eAAe,CAAC;YACzC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,WAAW,EAAE,GAAG;SACjB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO;;QACX,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,SAAS,EAAE,CAAC;YACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC;QAED,IAAI,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC;YACjC,MAAA,IAAI,CAAC,cAAc,0CAAE,UAAU,EAAE,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,OAAO,mBAAmB,CAAC,OAAO,CAAC;YACjC,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,SAAS,CAAC,MAAoB;QAClC,OAAO,mBAAmB,CAAC,SAAS,CAAC;YACnC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mBAAmB,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,IAA4B,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,UAAU,CAAC,OAAgB;QAC/B,OAAO,mBAAmB,CAAC,UAAU,CAAC;YACpC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,gBAAgB,CAAC,OAAgB;QACrC,OAAO,mBAAmB,CAAC,gBAAgB,CAAC;YAC1C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,kBAAkB,CAAC,OAAgB;QACvC,OAAO,mBAAmB,CAAC,kBAAkB,CAAC;YAC5C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,2BAA2B,CAAC,OAAgB;QAChD,OAAO,mBAAmB,CAAC,2BAA2B,CAAC;YACrD,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,qBAAqB,CAAC,OAAgB;QAC1C,OAAO,mBAAmB,CAAC,qBAAqB,CAAC;YAC/C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,UAAU,CAAC,OAAmB;QAClC,OAAO,mBAAmB,CAAC,UAAU,CAAC;YACpC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,YAAY,CACrB,MAAM,mBAAmB,CAAC,YAAY,CAAC;YACrC,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CACH,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAe,EAAE,OAAgB;QAClD,OAAO,mBAAmB,CAAC,YAAY,CAAC;YACtC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM;YACN,OAAO;SACR,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,IAAuB;QAC5C,OAAO,mBAAmB,CAAC,gBAAgB,CAAC;YAC1C,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,OAAO,mBAAmB,CAAC,YAAY,CAAC;YACtC,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAAc;QAC1B,OAAO,mBAAmB,CAAC,OAAO,CAAC;YACjC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM,EAAE,MAAM;SACf,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,MAAoB,EAAE,OAAgB;QACpD,OAAO,mBAAmB,CAAC,SAAS,CAAC;YACnC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM;YACN,OAAO;SACR,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,WAAW,GAAG,QAAQ,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAEjE,4DAA4D;QAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,WAAW,CAAC,CAAC,CAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1D,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1D,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACjD,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAG,EAAE;gBAChD,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChE,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7D,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACpD,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,GAAG,EAAE;gBACnD,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAIO,eAAe;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;YAErD,mBAAmB,CAAC,QAAQ,CAAC;gBAC3B,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,SAAS,EAAE;oBACT,CAAC,EAAE,OAAO,CAAC,CAAC;oBACZ,CAAC,EAAE,OAAO,CAAC,CAAC;oBACZ,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,MAAM,EAAE,OAAO,CAAC,MAAM;iBACvB;aACF,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;;;;;;;;;;;;;;;;MAiBE;IAEF;;;;;OAKG;IACH,KAAK,CAAC,uBAAuB,CAAC,QAAsD;QAClF,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,oBAAoB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAC/D,cAAc,EACd,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,0BAA0B,CAAC,QAAsD;QACrF,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,uBAAuB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAClE,iBAAiB,EACjB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,8BAA8B,CAAC,QAA6D;QAChG,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACrC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,CAAC;QAC5C,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,2BAA2B,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACtE,qBAAqB,EACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,2BAA2B,GAAG,SAAS,CAAC;QAC/C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,yBAAyB,CAAC,QAAwD;QACtF,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,sBAAsB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACjE,gBAAgB,EAChB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,mCAAmC,CAAC,QAAwD;QAChG,IAAI,IAAI,CAAC,gCAAgC,EAAE,CAAC;YAC1C,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,CAAC;QACjD,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,gCAAgC,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAC3E,0BAA0B,EAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,gCAAgC,GAAG,SAAS,CAAC;QACpD,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,4BAA4B,CAAC,QAAuD;QACxF,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;QAC1C,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,yBAAyB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACpE,mBAAmB,EACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,qBAAqB,CAAC,QAAoD;QAC9E,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,kBAAkB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACtC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,QAAoD;QAClF,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,sBAAsB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,2BAA2B,CAAC,QAAoD;QACpF,IAAI,SAAS,CAAC,gBAAgB,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC7E,IAAI,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;QACzC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,wBAAwB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7H,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,QAA4C;QACvE,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;QACpC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,mBAAmB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACvC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,wBAAwB,CAAC,QAAgE;QAC7F,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACtC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,qBAAqB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,yBAAyB,CAAC,QAAwD;QACtF,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,sBAAsB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACjE,gBAAgB,EAChB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,wBAAwB,CAAC,QAAuD;QACpF,IAAI,IAAI,CAAC,qBAAqB;YAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,CAAC;QAEtE,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,qBAAqB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAChE,eAAe,EACf,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,wBAAwB,CAAC,QAAuD;QACpF,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACtC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,qBAAqB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAChE,eAAe,EACf,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;IACH,CAAC;IACD;;;;;OAKG;IACH,KAAK,CAAC,0BAA0B,CAAC,QAAoD;QACnF,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,uBAAuB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAClE,iBAAiB,EACjB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,4BAA4B,CAAC,QAAuD;QACxF,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;QAC1C,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,yBAAyB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACpE,mBAAmB,EACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,uBAAuB,CAAC,QAAuD;QACnF,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,oBAAoB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAC/D,cAAc,EACd,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,0BAA0B,CAAC,QAAuD;QACtF,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,uBAAuB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAClE,iBAAiB,EACjB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,kCAAkC,CACtC,QAAiE;QAEjE,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACzC,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,CAAC;QAChD,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,+BAA+B,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAC1E,yBAAyB,EACzB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,+BAA+B,GAAG,SAAS,CAAC;QACnD,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,4BAA4B,CAAC,QAAoD;QACrF,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;QAC1C,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,yBAAyB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CACpE,mBAAmB,EACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAChC,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,qBAAqB;QACzB,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;YACtC,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;QACD,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;YACnC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACxC,CAAC;QACD,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACrC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,CAAC;YAC1C,IAAI,CAAC,2BAA2B,GAAG,SAAS,CAAC;QAC/C,CAAC;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;YACrC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;QAED,IAAI,IAAI,CAAC,gCAAgC,EAAE,CAAC;YAC1C,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,CAAC;YAC/C,IAAI,CAAC,gCAAgC,GAAG,SAAS,CAAC;QACpD,CAAC;QAED,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;YACxC,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;QAED,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;YACjC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACtC,CAAC;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;YACtC,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;YACrC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;QAED,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;YACxC,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;QAED,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;YACnC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACxC,CAAC;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;YACtC,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAC3C,CAAC;QAED,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACzC,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,+BAA+B,GAAG,SAAS,CAAC;QACnD,CAAC;QAED,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;YACxC,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC7C,CAAC;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;YACrC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC1C,CAAC;QAED,IAAI,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;YACvC,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;QAC5C,CAAC;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;QACzC,CAAC;IACH,CAAC;IAEO,gBAAgB,CAAC,QAAkC;QACzD,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;QACtB,OAAO,CAAC,IAAS,EAAE,EAAE;YACnB,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC;gBACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Capacitor } from '@capacitor/core';\r\nimport type { PluginListenerHandle } from '@capacitor/core';\r\n\r\nimport type {\r\n  CameraConfig,\r\n  Marker,\r\n  MapPadding,\r\n  MapListenerCallback,\r\n  MapReadyCallbackData,\r\n  CameraIdleCallbackData,\r\n  CameraMoveStartedCallbackData,\r\n  ClusterClickCallbackData,\r\n  MapClickCallbackData,\r\n  MarkerClickCallbackData,\r\n  MyLocationButtonClickCallbackData,\r\n  Polygon,\r\n  PolygonClickCallbackData,\r\n  Circle,\r\n  CircleClickCallbackData,\r\n  Polyline,\r\n  PolylineCallbackData,\r\n} from './definitions';\r\nimport { LatLngBounds, MapType } from './definitions';\r\nimport type { CreateMapArgs, GroundOverlayArgs } from './implementation';\r\nimport { CapacitorGoogleMaps } from './implementation';\r\n\r\nexport interface GoogleMapInterface {\r\n  create(options: CreateMapArgs, callback?: MapListenerCallback<MapReadyCallbackData>): Promise<GoogleMap>;\r\n  enableTouch(): Promise<void>;\r\n  disableTouch(): Promise<void>;\r\n  enableClustering(\r\n    /**\r\n     * The minimum number of markers that can be clustered together. The default is 4 markers.\r\n     */\r\n    minClusterSize?: number\r\n  ): Promise<void>;\r\n  disableClustering(): Promise<void>;\r\n  addMarker(marker: Marker): Promise<string>;\r\n  addMarkers(markers: Marker[]): Promise<string[]>;\r\n  updateMarker(id: string, marker: Marker): Promise<string>;\r\n  updateMarkerIcon(id: string, iconId: string, iconUrl: string): Promise<void>;\r\n  removeMarker(id: string): Promise<void>;\r\n  removeMarkers(ids: string[]): Promise<void>;\r\n  addPolygons(polygons: Polygon[]): Promise<string[]>;\r\n  removePolygons(ids: string[]): Promise<void>;\r\n  addCircles(circles: Circle[]): Promise<string[]>;\r\n  removeCircles(ids: string[]): Promise<void>;\r\n  addPolylines(polylines: Polyline[]): Promise<string[]>;\r\n  removePolylines(ids: string[]): Promise<void>;\r\n  destroy(): Promise<void>;\r\n  setCamera(config: CameraConfig): Promise<void>;\r\n  /**\r\n   * Get current map type\r\n   */\r\n  getMapType(): Promise<MapType>;\r\n  setMapType(mapType: MapType): Promise<void>;\r\n  enableIndoorMaps(enabled: boolean): Promise<void>;\r\n  enableTrafficLayer(enabled: boolean): Promise<void>;\r\n  enableAccessibilityElements(enabled: boolean): Promise<void>;\r\n  enableCurrentLocation(enabled: boolean): Promise<void>;\r\n  setPadding(padding: MapPadding): Promise<void>;\r\n  /**\r\n   * Get the map's current viewport latitude and longitude bounds.\r\n   *\r\n   * @returns {LatLngBounds}\r\n   */\r\n  getMapBounds(): Promise<LatLngBounds>;\r\n  /**\r\n   * Sets the map viewport to contain the given bounds.\r\n   * @param bounds The bounds to fit in the viewport.\r\n   * @param padding Optional padding to apply in pixels. The bounds will be fit in the part of the map that remains after padding is removed.\r\n   */\r\n  fitBounds(bounds: LatLngBounds, padding?: number): Promise<void>;\r\n  setOnBoundsChangedListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\r\n  setOnCameraIdleListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\r\n  setOnCameraMoveStartedListener(callback?: MapListenerCallback<CameraMoveStartedCallbackData>): Promise<void>;\r\n  setOnClusterClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void>;\r\n  setOnClusterInfoWindowClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void>;\r\n  setOnInfoWindowClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\r\n  setOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\r\n  setOnMarkerClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\r\n  setOnPolygonClickListener(callback?: MapListenerCallback<PolygonClickCallbackData>): Promise<void>;\r\n  setOnCircleClickListener(callback?: MapListenerCallback<CircleClickCallbackData>): Promise<void>;\r\n  setOnPolylineClickListener(callback?: MapListenerCallback<PolylineCallbackData>): Promise<void>;\r\n  setOnMarkerDragStartListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\r\n  setOnMarkerDragListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\r\n  setOnMarkerDragEndListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\r\n  setOnMyLocationButtonClickListener(callback?: MapListenerCallback<MyLocationButtonClickCallbackData>): Promise<void>;\r\n  setOnMyLocationClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\r\n  setOnMapDoubleClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\r\n  setOnMapLoadedListener(callback?: MapListenerCallback<{id: string}>): Promise<void>;\r\n  setOnZoomChangedListener(callback?: MapListenerCallback<{zoomLevel: number | undefined}>): Promise<void>;\r\n  takeSnapshot(format?: string, quality?: number): Promise<{snapshot: string | HTMLElement}>;\r\n  addGroundOverlay(groundOverlayOptions: GroundOverlayArgs): Promise<void>;\r\n  getZoomLevel(): Promise<number | undefined>;\r\n  hasIcon(iconId: string): Promise<boolean>;\r\n}\r\n\r\nclass MapCustomElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.innerHTML = '';\r\n\r\n    if (Capacitor.getPlatform() == 'ios') {\r\n      this.style.overflow = 'scroll';\r\n      (this.style as any)['-webkit-overflow-scrolling'] = 'touch';\r\n\r\n      const overflowDiv = document.createElement('div');\r\n      overflowDiv.style.height = '200%';\r\n\r\n      this.appendChild(overflowDiv);\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('capacitor-google-map', MapCustomElement);\r\n\r\nexport class GoogleMap {\r\n  private id: string;\r\n  private element: HTMLElement | null = null;\r\n  private resizeObserver: ResizeObserver | null = null;\r\n\r\n  private onBoundsChangedListener?: PluginListenerHandle;\r\n  private onCameraIdleListener?: PluginListenerHandle;\r\n  private onCameraMoveStartedListener?: PluginListenerHandle;\r\n  private onClusterClickListener?: PluginListenerHandle;\r\n  private onClusterInfoWindowClickListener?: PluginListenerHandle;\r\n  private onInfoWindowClickListener?: PluginListenerHandle;\r\n  private onMapClickListener?: PluginListenerHandle;\r\n  private onMapLongClickListener?: PluginListenerHandle;\r\n  private onPolylineClickListener?: PluginListenerHandle;\r\n  private onMarkerClickListener?: PluginListenerHandle;\r\n  private onPolygonClickListener?: PluginListenerHandle;\r\n  private onCircleClickListener?: PluginListenerHandle;\r\n  private onMarkerDragStartListener?: PluginListenerHandle;\r\n  private onMarkerDragListener?: PluginListenerHandle;\r\n  private onMarkerDragEndListener?: PluginListenerHandle;\r\n  private onMyLocationButtonClickListener?: PluginListenerHandle;\r\n  private onMyLocationClickListener?: PluginListenerHandle;\r\n  private onMapDoubleClickListener?: PluginListenerHandle;\r\n  private onMapLoadedListener?: PluginListenerHandle;\r\n  private onZoomChangedListener?: PluginListenerHandle;\r\n\r\n  private constructor(id: string) {\r\n    this.id = id;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of a Google Map\r\n   * @param options\r\n   * @param callback\r\n   * @returns GoogleMap\r\n   */\r\n  public static async create(\r\n    options: CreateMapArgs,\r\n    callback?: MapListenerCallback<MapReadyCallbackData>\r\n  ): Promise<GoogleMap> {\r\n    const newMap = new GoogleMap(options.id);\r\n\r\n    if (!options.element) {\r\n      throw new Error('container element is required');\r\n    }\r\n\r\n    if (options.config.androidLiteMode === undefined) {\r\n      options.config.androidLiteMode = false;\r\n    }\r\n\r\n    newMap.element = options.element;\r\n    newMap.element.dataset.internalId = options.id;\r\n\r\n    const elementBounds = await GoogleMap.getElementBounds(options.element);\r\n    options.config.width = elementBounds.width;\r\n    options.config.height = elementBounds.height;\r\n    options.config.x = elementBounds.x;\r\n    options.config.y = elementBounds.y;\r\n    options.config.devicePixelRatio = window.devicePixelRatio;\r\n\r\n    if (Capacitor.getPlatform() == 'android') {\r\n      newMap.initScrolling();\r\n    }\r\n\r\n    if (Capacitor.isNativePlatform()) {\r\n      (options.element as any) = {};\r\n\r\n      const getMapBounds = () => {\r\n        const mapRect = newMap.element?.getBoundingClientRect() ?? ({} as DOMRect);\r\n        return {\r\n          x: mapRect.x,\r\n          y: mapRect.y,\r\n          width: mapRect.width,\r\n          height: mapRect.height,\r\n        };\r\n      };\r\n\r\n      const onDisplay = () => {\r\n        CapacitorGoogleMaps.onDisplay({\r\n          id: newMap.id,\r\n          mapBounds: getMapBounds(),\r\n        });\r\n      };\r\n\r\n      const onResize = () => {\r\n        CapacitorGoogleMaps.onResize({\r\n          id: newMap.id,\r\n          mapBounds: getMapBounds(),\r\n        });\r\n      };\r\n\r\n      const ionicPage = newMap.element.closest('.ion-page');\r\n      if (Capacitor.getPlatform() === 'ios' && ionicPage) {\r\n        ionicPage.addEventListener('ionViewWillEnter', () => {\r\n          setTimeout(() => {\r\n            onDisplay();\r\n          }, 100);\r\n        });\r\n        ionicPage.addEventListener('ionViewDidEnter', () => {\r\n          setTimeout(() => {\r\n            onDisplay();\r\n          }, 100);\r\n        });\r\n      }\r\n\r\n      const lastState = {\r\n        width: elementBounds.width,\r\n        height: elementBounds.height,\r\n        isHidden: false,\r\n      };\r\n      newMap.resizeObserver = new ResizeObserver(() => {\r\n        if (newMap.element != null) {\r\n          const mapRect = newMap.element.getBoundingClientRect();\r\n\r\n          const isHidden = mapRect.width === 0 && mapRect.height === 0;\r\n          if (!isHidden) {\r\n            if (lastState.isHidden) {\r\n              if (Capacitor.getPlatform() === 'ios' && !ionicPage) {\r\n                onDisplay();\r\n              }\r\n            } else if (lastState.width !== mapRect.width || lastState.height !== mapRect.height) {\r\n              onResize();\r\n            }\r\n          }\r\n\r\n          lastState.width = mapRect.width;\r\n          lastState.height = mapRect.height;\r\n          lastState.isHidden = isHidden;\r\n        }\r\n      });\r\n      newMap.resizeObserver.observe(newMap.element);\r\n    }\r\n\r\n    // small delay to allow for iOS WKWebView to setup corresponding element sub-scroll views ???\r\n    await new Promise((resolve, reject) => {\r\n      setTimeout(async () => {\r\n        try {\r\n          await CapacitorGoogleMaps.create(options);\r\n          resolve(undefined);\r\n        } catch (err) {\r\n          reject(err);\r\n        }\r\n      }, 200);\r\n    });\r\n\r\n    if (callback) {\r\n      const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data: MapReadyCallbackData) => {\r\n        if (data.mapId == newMap.id) {\r\n          callback(data);\r\n          onMapReadyListener.remove();\r\n        }\r\n      });\r\n    }\r\n\r\n    return newMap;\r\n  }\r\n\r\n  private static async getElementBounds(element: HTMLElement): Promise<DOMRect> {\r\n    return new Promise((resolve) => {\r\n      let elementBounds = element.getBoundingClientRect();\r\n      if (elementBounds.width == 0) {\r\n        let retries = 0;\r\n        const boundsInterval = setInterval(function () {\r\n          if (elementBounds.width == 0 && retries < 30) {\r\n            elementBounds = element.getBoundingClientRect();\r\n            retries++;\r\n          } else {\r\n            if (retries == 30) {\r\n              console.warn('Map size could not be determined');\r\n            }\r\n            clearInterval(boundsInterval);\r\n            resolve(elementBounds);\r\n          }\r\n        }, 100);\r\n      } else {\r\n        resolve(elementBounds);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enable touch events on native map\r\n   *\r\n   * @returns void\r\n   */\r\n  async enableTouch(): Promise<void> {\r\n    return CapacitorGoogleMaps.enableTouch({\r\n      id: this.id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disable touch events on native map\r\n   *\r\n   * @returns void\r\n   */\r\n  async disableTouch(): Promise<void> {\r\n    return CapacitorGoogleMaps.disableTouch({\r\n      id: this.id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enable marker clustering\r\n   *\r\n   * @param minClusterSize - The minimum number of markers that can be clustered together.\r\n   * @defaultValue 4\r\n   *\r\n   * @returns void\r\n   */\r\n  async enableClustering(minClusterSize?: number): Promise<void> {\r\n    return CapacitorGoogleMaps.enableClustering({\r\n      id: this.id,\r\n      minClusterSize,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disable marker clustering\r\n   *\r\n   * @returns void\r\n   */\r\n  async disableClustering(): Promise<void> {\r\n    return CapacitorGoogleMaps.disableClustering({\r\n      id: this.id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a marker to the map\r\n   *\r\n   * @param marker\r\n   * @returns created marker id\r\n   */\r\n  async addMarker(marker: Marker): Promise<string> {\r\n    const res = await CapacitorGoogleMaps.addMarker({\r\n      id: this.id,\r\n      marker,\r\n    });\r\n\r\n    return res.id;\r\n  }\r\n\r\n  /**\r\n   * Adds multiple markers to the map\r\n   *\r\n   * @param markers\r\n   * @returns array of created marker IDs\r\n   */\r\n  async addMarkers(markers: Marker[]): Promise<string[]> {\r\n    const res = await CapacitorGoogleMaps.addMarkers({\r\n      id: this.id,\r\n      markers,\r\n    });\r\n\r\n    return res.ids;\r\n  }\r\n\r\n  async updateMarker(id: string, marker: Marker): Promise<string> {\r\n    const res = await CapacitorGoogleMaps.updateMarker({\r\n      id: this.id,\r\n      markerId: id,\r\n      marker,\r\n    });\r\n\r\n    return res.id;\r\n  }\r\n\r\n  async updateMarkerIcon(mId: string, iconId: string, iconUrl: string): Promise<void> {\r\n    return CapacitorGoogleMaps.updateMarkerIcon({\r\n      id: this.id,\r\n      mId: mId,\r\n      iconId,\r\n      iconUrl\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove marker from the map\r\n   *\r\n   * @param id id of the marker to remove from the map\r\n   * @returns\r\n   */\r\n  async removeMarker(id: string): Promise<void> {\r\n    return CapacitorGoogleMaps.removeMarker({\r\n      id: this.id,\r\n      markerId: id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove markers from the map\r\n   *\r\n   * @param ids array of ids to remove from the map\r\n   * @returns\r\n   */\r\n  async removeMarkers(ids: string[]): Promise<void> {\r\n    return CapacitorGoogleMaps.removeMarkers({\r\n      id: this.id,\r\n      markerIds: ids,\r\n    });\r\n  }\r\n\r\n  async addPolygons(polygons: Polygon[]): Promise<string[]> {\r\n    const res = await CapacitorGoogleMaps.addPolygons({\r\n      id: this.id,\r\n      polygons,\r\n    });\r\n\r\n    return res.ids;\r\n  }\r\n\r\n  async addPolylines(polylines: Polyline[]): Promise<string[]> {\r\n    const res = await CapacitorGoogleMaps.addPolylines({\r\n      id: this.id,\r\n      polylines,\r\n    });\r\n\r\n    return res.ids;\r\n  }\r\n\r\n  async removePolygons(ids: string[]): Promise<void> {\r\n    return CapacitorGoogleMaps.removePolygons({\r\n      id: this.id,\r\n      polygonIds: ids,\r\n    });\r\n  }\r\n\r\n  async addCircles(circles: Circle[]): Promise<string[]> {\r\n    const res = await CapacitorGoogleMaps.addCircles({\r\n      id: this.id,\r\n      circles,\r\n    });\r\n\r\n    return res.ids;\r\n  }\r\n\r\n  async removeCircles(ids: string[]): Promise<void> {\r\n    return CapacitorGoogleMaps.removeCircles({\r\n      id: this.id,\r\n      circleIds: ids,\r\n    });\r\n  }\r\n\r\n  async removePolylines(ids: string[]): Promise<void> {\r\n    return CapacitorGoogleMaps.removePolylines({\r\n      id: this.id,\r\n      polylineIds: ids,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroy the current instance of the map\r\n   */\r\n  async destroy(): Promise<void> {\r\n    if (Capacitor.getPlatform() == 'android') {\r\n      this.disableScrolling();\r\n    }\r\n\r\n    if (Capacitor.isNativePlatform()) {\r\n      this.resizeObserver?.disconnect();\r\n    }\r\n\r\n    this.removeAllMapListeners();\r\n\r\n    return CapacitorGoogleMaps.destroy({\r\n      id: this.id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the map camera configuration\r\n   *\r\n   * @param config\r\n   * @returns\r\n   */\r\n  async setCamera(config: CameraConfig): Promise<void> {\r\n    return CapacitorGoogleMaps.setCamera({\r\n      id: this.id,\r\n      config,\r\n    });\r\n  }\r\n\r\n  async getMapType(): Promise<MapType> {\r\n    const { type } = await CapacitorGoogleMaps.getMapType({ id: this.id });\r\n    return MapType[type as keyof typeof MapType];\r\n  }\r\n\r\n  /**\r\n   * Sets the type of map tiles that should be displayed.\r\n   *\r\n   * @param mapType\r\n   * @returns\r\n   */\r\n  async setMapType(mapType: MapType): Promise<void> {\r\n    return CapacitorGoogleMaps.setMapType({\r\n      id: this.id,\r\n      mapType,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets whether indoor maps are shown, where available.\r\n   *\r\n   * @param enabled\r\n   * @returns\r\n   */\r\n  async enableIndoorMaps(enabled: boolean): Promise<void> {\r\n    return CapacitorGoogleMaps.enableIndoorMaps({\r\n      id: this.id,\r\n      enabled,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Controls whether the map is drawing traffic data, if available.\r\n   *\r\n   * @param enabled\r\n   * @returns\r\n   */\r\n  async enableTrafficLayer(enabled: boolean): Promise<void> {\r\n    return CapacitorGoogleMaps.enableTrafficLayer({\r\n      id: this.id,\r\n      enabled,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show accessibility elements for overlay objects, such as Marker and Polyline.\r\n   *\r\n   * Only available on iOS.\r\n   *\r\n   * @param enabled\r\n   * @returns\r\n   */\r\n  async enableAccessibilityElements(enabled: boolean): Promise<void> {\r\n    return CapacitorGoogleMaps.enableAccessibilityElements({\r\n      id: this.id,\r\n      enabled,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set whether the My Location dot and accuracy circle is enabled.\r\n   *\r\n   * @param enabled\r\n   * @returns\r\n   */\r\n  async enableCurrentLocation(enabled: boolean): Promise<void> {\r\n    return CapacitorGoogleMaps.enableCurrentLocation({\r\n      id: this.id,\r\n      enabled,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set padding on the 'visible' region of the view.\r\n   *\r\n   * @param padding\r\n   * @returns\r\n   */\r\n  async setPadding(padding: MapPadding): Promise<void> {\r\n    return CapacitorGoogleMaps.setPadding({\r\n      id: this.id,\r\n      padding,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the map's current viewport latitude and longitude bounds.\r\n   *\r\n   * @returns {LatLngBounds}\r\n   */\r\n  async getMapBounds(): Promise<LatLngBounds> {\r\n    return new LatLngBounds(\r\n      await CapacitorGoogleMaps.getMapBounds({\r\n        id: this.id,\r\n      })\r\n    );\r\n  }\r\n\r\n  async takeSnapshot(format?: string, quality?: number): Promise<{snapshot: string | HTMLElement}> {\r\n    return CapacitorGoogleMaps.takeSnapshot({\r\n      id: this.id,\r\n      format,\r\n      quality\r\n    })\r\n  }\r\n\r\n  async addGroundOverlay(opts: GroundOverlayArgs): Promise<void> {\r\n    return CapacitorGoogleMaps.addGroundOverlay({\r\n      id: this.id,\r\n      latitude: opts.latitude,\r\n      longitude: opts.longitude,\r\n      width: opts.width,\r\n      height: opts.height,\r\n      imagePath: opts.imagePath\r\n    })\r\n  }\r\n\r\n  async getZoomLevel(): Promise<{ zoomLevel: number | undefined }> {\r\n    return CapacitorGoogleMaps.getZoomLevel({\r\n      id: this.id\r\n    })\r\n  }\r\n\r\n  async hasIcon(iconId: string): Promise<{ hasIcon: boolean}> {\r\n    return CapacitorGoogleMaps.hasIcon({\r\n      id: this.id,\r\n      iconId: iconId\r\n    })\r\n  }\r\n\r\n  async fitBounds(bounds: LatLngBounds, padding?: number): Promise<void> {\r\n    return CapacitorGoogleMaps.fitBounds({\r\n      id: this.id,\r\n      bounds,\r\n      padding,\r\n    });\r\n  }\r\n\r\n  initScrolling(): void {\r\n    const ionContents = document.getElementsByTagName('ion-content');\r\n\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < ionContents.length; i++) {\r\n      (ionContents[i] as any).scrollEvents = true;\r\n    }\r\n\r\n    window.addEventListener('ionScroll', this.handleScrollEvent);\r\n    window.addEventListener('scroll', this.handleScrollEvent);\r\n    window.addEventListener('resize', this.handleScrollEvent);\r\n    if (screen.orientation) {\r\n      screen.orientation.addEventListener('change', () => {\r\n        setTimeout(this.updateMapBounds, 500);\r\n      });\r\n    } else {\r\n      window.addEventListener('orientationchange', () => {\r\n        setTimeout(this.updateMapBounds, 500);\r\n      });\r\n    }\r\n  }\r\n\r\n  disableScrolling(): void {\r\n    window.removeEventListener('ionScroll', this.handleScrollEvent);\r\n    window.removeEventListener('scroll', this.handleScrollEvent);\r\n    window.removeEventListener('resize', this.handleScrollEvent);\r\n    if (screen.orientation) {\r\n      screen.orientation.removeEventListener('change', () => {\r\n        setTimeout(this.updateMapBounds, 1000);\r\n      });\r\n    } else {\r\n      window.removeEventListener('orientationchange', () => {\r\n        setTimeout(this.updateMapBounds, 1000);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleScrollEvent = (): void => this.updateMapBounds();\r\n\r\n  private updateMapBounds(): void {\r\n    if (this.element) {\r\n      const mapRect = this.element.getBoundingClientRect();\r\n\r\n      CapacitorGoogleMaps.onScroll({\r\n        id: this.id,\r\n        mapBounds: {\r\n          x: mapRect.x,\r\n          y: mapRect.y,\r\n          width: mapRect.width,\r\n          height: mapRect.height,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  /*\r\n  private findContainerElement(): HTMLElement | null {\r\n    if (!this.element) {\r\n      return null;\r\n    }\r\n\r\n    let parentElement = this.element.parentElement;\r\n    while (parentElement !== null) {\r\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\r\n        return parentElement;\r\n      }\r\n\r\n      parentElement = parentElement.parentElement;\r\n    }\r\n\r\n    return null;\r\n  }\r\n  */\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onCameraIdle' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnCameraIdleListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void> {\r\n    if (this.onCameraIdleListener) {\r\n      this.onCameraIdleListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onCameraIdleListener = await CapacitorGoogleMaps.addListener(\r\n        'onCameraIdle',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onCameraIdleListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onBoundsChanged' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnBoundsChangedListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void> {\r\n    if (this.onBoundsChangedListener) {\r\n      this.onBoundsChangedListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener(\r\n        'onBoundsChanged',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onBoundsChangedListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onCameraMoveStarted' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnCameraMoveStartedListener(callback?: MapListenerCallback<CameraMoveStartedCallbackData>): Promise<void> {\r\n    if (this.onCameraMoveStartedListener) {\r\n      this.onCameraMoveStartedListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener(\r\n        'onCameraMoveStarted',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onCameraMoveStartedListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onClusterClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnClusterClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void> {\r\n    if (this.onClusterClickListener) {\r\n      this.onClusterClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onClusterClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onClusterClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onClusterClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onClusterInfoWindowClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnClusterInfoWindowClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void> {\r\n    if (this.onClusterInfoWindowClickListener) {\r\n      this.onClusterInfoWindowClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onClusterInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onClusterInfoWindowClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onClusterInfoWindowClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onInfoWindowClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnInfoWindowClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\r\n    if (this.onInfoWindowClickListener) {\r\n      this.onInfoWindowClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onInfoWindowClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onInfoWindowClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMapClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\r\n    if (this.onMapClickListener) {\r\n      this.onMapClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\r\n    } else {\r\n      this.onMapClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  async setOnMapLongClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\r\n    if (this.onMapLongClickListener) {\r\n      this.onMapLongClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMapLongClickListener = await CapacitorGoogleMaps.addListener('onMapLongClick', this.generateCallback(callback));\r\n    } else {\r\n      this.onMapLongClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  async setOnMapDoubleClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\r\n    if (Capacitor.isNativePlatform()) throw new Error('Not suppoted on native.');\r\n    if (this.onMapDoubleClickListener) {\r\n      this.onMapDoubleClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMapDoubleClickListener = await CapacitorGoogleMaps.addListener('onMapDoubleClick', this.generateCallback(callback));\r\n    } else {\r\n      this.onMapDoubleClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  async setOnMapLoadedListener(callback?: MapListenerCallback<{id: string}>): Promise<void> {\r\n    if (this.onMapLoadedListener) {\r\n      this.onMapLoadedListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMapLoadedListener = await CapacitorGoogleMaps.addListener('onMapLoaded', this.generateCallback(callback));\r\n    } else {\r\n      this.onMapLoadedListener = undefined;\r\n    }\r\n  }\r\n\r\n  async setOnZoomChangedListener(callback?:  MapListenerCallback<{zoomLevel: number | undefined}>): Promise<void> {\r\n    if (this.onZoomChangedListener) {\r\n      this.onZoomChangedListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onZoomChangedListener = await CapacitorGoogleMaps.addListener('onZoomChanged', this.generateCallback(callback));\r\n    } else {\r\n      this.onZoomChangedListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onPolygonClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnPolygonClickListener(callback?: MapListenerCallback<PolygonClickCallbackData>): Promise<void> {\r\n    if (this.onPolygonClickListener) {\r\n      this.onPolygonClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onPolygonClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onPolygonClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onPolygonClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onCircleClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnCircleClickListener(callback?: MapListenerCallback<CircleClickCallbackData>): Promise<void> {\r\n    if (this.onCircleClickListener) [this.onCircleClickListener.remove()];\r\n\r\n    if (callback) {\r\n      this.onCircleClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onCircleClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onCircleClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMarkerClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMarkerClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\r\n    if (this.onMarkerClickListener) {\r\n      this.onMarkerClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMarkerClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onMarkerClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMarkerClickListener = undefined;\r\n    }\r\n  }\r\n  /**\r\n   * Set the event listener on the map for 'onPolylineClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnPolylineClickListener(callback?: MapListenerCallback<PolylineCallbackData>): Promise<void> {\r\n    if (this.onPolylineClickListener) {\r\n      this.onPolylineClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onPolylineClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onPolylineClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onPolylineClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMarkerDragStart' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMarkerDragStartListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\r\n    if (this.onMarkerDragStartListener) {\r\n      this.onMarkerDragStartListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMarkerDragStartListener = await CapacitorGoogleMaps.addListener(\r\n        'onMarkerDragStart',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMarkerDragStartListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMarkerDrag' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMarkerDragListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\r\n    if (this.onMarkerDragListener) {\r\n      this.onMarkerDragListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMarkerDragListener = await CapacitorGoogleMaps.addListener(\r\n        'onMarkerDrag',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMarkerDragListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMarkerDragEnd' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMarkerDragEndListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\r\n    if (this.onMarkerDragEndListener) {\r\n      this.onMarkerDragEndListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMarkerDragEndListener = await CapacitorGoogleMaps.addListener(\r\n        'onMarkerDragEnd',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMarkerDragEndListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMyLocationButtonClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMyLocationButtonClickListener(\r\n    callback?: MapListenerCallback<MyLocationButtonClickCallbackData>\r\n  ): Promise<void> {\r\n    if (this.onMyLocationButtonClickListener) {\r\n      this.onMyLocationButtonClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMyLocationButtonClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onMyLocationButtonClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMyLocationButtonClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the event listener on the map for 'onMyLocationClick' events.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async setOnMyLocationClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\r\n    if (this.onMyLocationClickListener) {\r\n      this.onMyLocationClickListener.remove();\r\n    }\r\n\r\n    if (callback) {\r\n      this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener(\r\n        'onMyLocationClick',\r\n        this.generateCallback(callback)\r\n      );\r\n    } else {\r\n      this.onMyLocationClickListener = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all event listeners on the map.\r\n   *\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  async removeAllMapListeners(): Promise<void> {\r\n    if (this.onBoundsChangedListener) {\r\n      this.onBoundsChangedListener.remove();\r\n      this.onBoundsChangedListener = undefined;\r\n    }\r\n    if (this.onCameraIdleListener) {\r\n      this.onCameraIdleListener.remove();\r\n      this.onCameraIdleListener = undefined;\r\n    }\r\n    if (this.onCameraMoveStartedListener) {\r\n      this.onCameraMoveStartedListener.remove();\r\n      this.onCameraMoveStartedListener = undefined;\r\n    }\r\n\r\n    if (this.onClusterClickListener) {\r\n      this.onClusterClickListener.remove();\r\n      this.onClusterClickListener = undefined;\r\n    }\r\n\r\n    if (this.onClusterInfoWindowClickListener) {\r\n      this.onClusterInfoWindowClickListener.remove();\r\n      this.onClusterInfoWindowClickListener = undefined;\r\n    }\r\n\r\n    if (this.onInfoWindowClickListener) {\r\n      this.onInfoWindowClickListener.remove();\r\n      this.onInfoWindowClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMapClickListener) {\r\n      this.onMapClickListener.remove();\r\n      this.onMapClickListener = undefined;\r\n    }\r\n\r\n    if (this.onPolylineClickListener) {\r\n      this.onPolylineClickListener.remove();\r\n      this.onPolylineClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMarkerClickListener) {\r\n      this.onMarkerClickListener.remove();\r\n      this.onMarkerClickListener = undefined;\r\n    }\r\n\r\n    if (this.onPolygonClickListener) {\r\n      this.onPolygonClickListener.remove();\r\n      this.onPolygonClickListener = undefined;\r\n    }\r\n\r\n    if (this.onCircleClickListener) {\r\n      this.onCircleClickListener.remove();\r\n      this.onCircleClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMarkerDragStartListener) {\r\n      this.onMarkerDragStartListener.remove();\r\n      this.onMarkerDragStartListener = undefined;\r\n    }\r\n\r\n    if (this.onMarkerDragListener) {\r\n      this.onMarkerDragListener.remove();\r\n      this.onMarkerDragListener = undefined;\r\n    }\r\n\r\n    if (this.onMarkerDragEndListener) {\r\n      this.onMarkerDragEndListener.remove();\r\n      this.onMarkerDragEndListener = undefined;\r\n    }\r\n\r\n    if (this.onMyLocationButtonClickListener) {\r\n      this.onMyLocationButtonClickListener.remove();\r\n      this.onMyLocationButtonClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMyLocationClickListener) {\r\n      this.onMyLocationClickListener.remove();\r\n      this.onMyLocationClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMapLongClickListener) {\r\n      this.onMapLongClickListener.remove();\r\n      this.onMapLongClickListener = undefined;\r\n    }\r\n\r\n    if (this.onMapDoubleClickListener) {\r\n      this.onMapDoubleClickListener.remove();\r\n      this.onMapDoubleClickListener = undefined;\r\n    }\r\n\r\n    if (this.onZoomChangedListener) {\r\n      this.onZoomChangedListener.remove();\r\n      this.onZoomChangedListener = undefined;\r\n    }\r\n  }\r\n\r\n  private generateCallback(callback: MapListenerCallback<any>): MapListenerCallback<any> {\r\n    const mapId = this.id;\r\n    return (data: any) => {\r\n      if (data.mapId == mapId) {\r\n        callback(data);\r\n      }\r\n    };\r\n  }\r\n}\r\n"]}